// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conf.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KeyType int32

const (
	KeyType_Key    KeyType = 0
	KeyType_Prefix KeyType = 1
)

var KeyType_name = map[int32]string{
	0: "Key",
	1: "Prefix",
}

var KeyType_value = map[string]int32{
	"Key":    0,
	"Prefix": 1,
}

func (x KeyType) String() string {
	return proto.EnumName(KeyType_name, int32(x))
}

func (KeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b6ecbfc68e85c65, []int{0}
}

// GetConfReq 获取配置请求
type GetConfReq struct {
	// service 服务名称，也可以是某个配置大类名称
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// key 配置键
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// subkey 配置子键
	Subkey string `protobuf:"bytes,3,opt,name=subkey,proto3" json:"subkey,omitempty"`
	// 键类型
	KeyType              int32    `protobuf:"varint,4,opt,name=KeyType,proto3" json:"KeyType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfReq) Reset()         { *m = GetConfReq{} }
func (m *GetConfReq) String() string { return proto.CompactTextString(m) }
func (*GetConfReq) ProtoMessage()    {}
func (*GetConfReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b6ecbfc68e85c65, []int{0}
}

func (m *GetConfReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfReq.Unmarshal(m, b)
}
func (m *GetConfReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfReq.Marshal(b, m, deterministic)
}
func (m *GetConfReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfReq.Merge(m, src)
}
func (m *GetConfReq) XXX_Size() int {
	return xxx_messageInfo_GetConfReq.Size(m)
}
func (m *GetConfReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfReq proto.InternalMessageInfo

func (m *GetConfReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *GetConfReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetConfReq) GetSubkey() string {
	if m != nil {
		return m.Subkey
	}
	return ""
}

func (m *GetConfReq) GetKeyType() int32 {
	if m != nil {
		return m.KeyType
	}
	return 0
}

//
type ConfValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Subkey               string   `protobuf:"bytes,2,opt,name=subkey,proto3" json:"subkey,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfValue) Reset()         { *m = ConfValue{} }
func (m *ConfValue) String() string { return proto.CompactTextString(m) }
func (*ConfValue) ProtoMessage()    {}
func (*ConfValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b6ecbfc68e85c65, []int{1}
}

func (m *ConfValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfValue.Unmarshal(m, b)
}
func (m *ConfValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfValue.Marshal(b, m, deterministic)
}
func (m *ConfValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfValue.Merge(m, src)
}
func (m *ConfValue) XXX_Size() int {
	return xxx_messageInfo_ConfValue.Size(m)
}
func (m *ConfValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfValue.DiscardUnknown(m)
}

var xxx_messageInfo_ConfValue proto.InternalMessageInfo

func (m *ConfValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConfValue) GetSubkey() string {
	if m != nil {
		return m.Subkey
	}
	return ""
}

func (m *ConfValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// GetConfRsp 获取配置响应
type GetConfRsp struct {
	List                 []*ConfValue `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetConfRsp) Reset()         { *m = GetConfRsp{} }
func (m *GetConfRsp) String() string { return proto.CompactTextString(m) }
func (*GetConfRsp) ProtoMessage()    {}
func (*GetConfRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b6ecbfc68e85c65, []int{2}
}

func (m *GetConfRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfRsp.Unmarshal(m, b)
}
func (m *GetConfRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfRsp.Marshal(b, m, deterministic)
}
func (m *GetConfRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfRsp.Merge(m, src)
}
func (m *GetConfRsp) XXX_Size() int {
	return xxx_messageInfo_GetConfRsp.Size(m)
}
func (m *GetConfRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfRsp proto.InternalMessageInfo

func (m *GetConfRsp) GetList() []*ConfValue {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterEnum("server.KeyType", KeyType_name, KeyType_value)
	proto.RegisterType((*GetConfReq)(nil), "server.GetConfReq")
	proto.RegisterType((*ConfValue)(nil), "server.ConfValue")
	proto.RegisterType((*GetConfRsp)(nil), "server.GetConfRsp")
}

func init() { proto.RegisterFile("conf.proto", fileDescriptor_0b6ecbfc68e85c65) }

var fileDescriptor_0b6ecbfc68e85c65 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xcd, 0xb2, 0x65, 0xf4, 0x79, 0xa9, 0x0f, 0x91, 0xe0, 0x41, 0x4a, 0x41, 0x28, 0x1e,
	0x7a, 0x58, 0xcf, 0x9e, 0x3c, 0x78, 0xe8, 0x45, 0x82, 0x78, 0x77, 0xe3, 0x75, 0x44, 0xc7, 0x12,
	0x93, 0x6e, 0x98, 0xff, 0x5e, 0x92, 0xb5, 0x1d, 0xa2, 0xb7, 0x7e, 0xbf, 0xf2, 0x7e, 0xdf, 0xcb,
	0x03, 0xd8, 0x98, 0x7d, 0x57, 0x5b, 0x67, 0x7a, 0x83, 0xc2, 0x93, 0x3b, 0x92, 0x2b, 0x3f, 0x00,
	0x9e, 0xa9, 0x7f, 0x32, 0xfb, 0x4e, 0xd1, 0x17, 0x4a, 0x58, 0x46, 0xae, 0x37, 0x24, 0x59, 0xc1,
	0xaa, 0x4c, 0x8d, 0x11, 0x73, 0xe0, 0x9f, 0x14, 0xe4, 0x2c, 0xd1, 0xf8, 0x89, 0x37, 0x20, 0xfc,
	0x61, 0x1d, 0x21, 0x4f, 0x70, 0x48, 0xd1, 0xd1, 0x52, 0x78, 0x0d, 0x96, 0xe4, 0xbc, 0x60, 0xd5,
	0x42, 0x8d, 0xb1, 0x6c, 0x21, 0x8b, 0x45, 0x6f, 0xef, 0xbb, 0xc3, 0x24, 0x64, 0xff, 0x09, 0x67,
	0xbf, 0x84, 0xd7, 0xb0, 0x38, 0xc6, 0x91, 0xa1, 0xe7, 0x14, 0xca, 0xe6, 0xbc, 0xb8, 0xb7, 0x78,
	0x0f, 0xf3, 0x9d, 0xf6, 0xbd, 0x64, 0x05, 0xaf, 0x2e, 0x57, 0x57, 0xf5, 0xe9, 0x75, 0xf5, 0x54,
	0xa7, 0xd2, 0xef, 0x87, 0xbb, 0x69, 0x37, 0x5c, 0x02, 0x6f, 0x29, 0xe4, 0x17, 0x08, 0x20, 0x5e,
	0x1c, 0x75, 0xfa, 0x3b, 0x67, 0xab, 0x47, 0x10, 0x71, 0x44, 0x6f, 0xb1, 0x81, 0x6c, 0xd0, 0xeb,
	0x2d, 0xe2, 0xe8, 0x3b, 0x9f, 0xea, 0xf6, 0x0f, 0xf3, 0x76, 0x2d, 0xd2, 0x6d, 0x9b, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xcf, 0xcb, 0xc0, 0xac, 0x69, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigClient is the client API for Config service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigClient interface {
	GetConfig(ctx context.Context, in *GetConfReq, opts ...grpc.CallOption) (*GetConfRsp, error)
}

type configClient struct {
	cc *grpc.ClientConn
}

func NewConfigClient(cc *grpc.ClientConn) ConfigClient {
	return &configClient{cc}
}

func (c *configClient) GetConfig(ctx context.Context, in *GetConfReq, opts ...grpc.CallOption) (*GetConfRsp, error) {
	out := new(GetConfRsp)
	err := c.cc.Invoke(ctx, "/server.Config/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServer is the server API for Config service.
type ConfigServer interface {
	GetConfig(context.Context, *GetConfReq) (*GetConfRsp, error)
}

func RegisterConfigServer(s *grpc.Server, srv ConfigServer) {
	s.RegisterService(&_Config_serviceDesc, srv)
}

func _Config_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Config/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).GetConfig(ctx, req.(*GetConfReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Config_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.Config",
	HandlerType: (*ConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _Config_GetConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conf.proto",
}
